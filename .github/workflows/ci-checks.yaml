name: ci-run

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  # ------------------------------------------------------------------
  general-checks:
    name: general-checks üßπ
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: "latest"

      - name: Restore Bun cache
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: bun-${{ runner.os }}-${{ hashFiles('bun.lockb') }}

      - name: Install deps
        run: bun install --frozen-lockfile

      - name: Set up Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Prettier format check
        run: bun run fmt:check

      - name: ESLint + type-check
        run: |
          bun run lint
          bun run tsc --noEmit

  # ------------------------------------------------------------------
  foundry-checks:
    name: foundry-checks üõ†Ô∏è
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Foundry
        uses: foundry-rs/foundry-toolchain@v1
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: stable


      - name: Build
        run: forge build --sizes

      - name: Set up Foundry-ZKsync
        uses: dutterbutter/foundry-zksync-toolchain@v1
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: forge build --sizes --zksync

  # ------------------------------------------------------------------
  hardhat-checks:
    name: hardhat-checks üèóÔ∏è
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: "latest"

      - name: Restore Bun cache
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: bun-${{ runner.os }}-${{ hashFiles('bun.lockb') }}

      - name: Install deps
        run: bun install --frozen-lockfile

      - name: Compile
        run: bun run hh:compile


  # Special job that allows some of the jobs to be skipped or failed
  # requiring others to be successful
  pr-checks:
    runs-on: ubuntu-latest
    if: always()
    needs:
      - general-checks
      - foundry-checks
      - hardhat-checks
    steps:
      - name: Decide on PR checks
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}